// Generated by data binding compiler. Do not edit!
package com.app.touch_of_jasmine.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.app.touch_of_jasmine.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutImagePickerBinding extends ViewDataBinding {
  @NonNull
  public final TextView btnCancel;

  @NonNull
  public final CardView cvCamera;

  @NonNull
  public final CardView cvGallery;

  @NonNull
  public final ImageView imgCamera;

  @NonNull
  public final ImageView imgGallery;

  @NonNull
  public final LinearLayout linCamGall;

  @NonNull
  public final TextView txtCamera;

  @NonNull
  public final TextView txtGallery;

  @NonNull
  public final TextView txtHeader;

  protected LayoutImagePickerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView btnCancel, CardView cvCamera, CardView cvGallery, ImageView imgCamera,
      ImageView imgGallery, LinearLayout linCamGall, TextView txtCamera, TextView txtGallery,
      TextView txtHeader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnCancel = btnCancel;
    this.cvCamera = cvCamera;
    this.cvGallery = cvGallery;
    this.imgCamera = imgCamera;
    this.imgGallery = imgGallery;
    this.linCamGall = linCamGall;
    this.txtCamera = txtCamera;
    this.txtGallery = txtGallery;
    this.txtHeader = txtHeader;
  }

  @NonNull
  public static LayoutImagePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_image_picker, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutImagePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutImagePickerBinding>inflateInternal(inflater, R.layout.layout_image_picker, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutImagePickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_image_picker, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutImagePickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutImagePickerBinding>inflateInternal(inflater, R.layout.layout_image_picker, null, false, component);
  }

  public static LayoutImagePickerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutImagePickerBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutImagePickerBinding)bind(component, view, R.layout.layout_image_picker);
  }
}
