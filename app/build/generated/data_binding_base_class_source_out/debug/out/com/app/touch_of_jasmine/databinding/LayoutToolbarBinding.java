// Generated by data binding compiler. Do not edit!
package com.app.touch_of_jasmine.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.app.touch_of_jasmine.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class LayoutToolbarBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout conIconOne;

  @NonNull
  public final ConstraintLayout conIconTwo;

  @NonNull
  public final ImageView imgToolbarHeader;

  @NonNull
  public final ImageView ivArrow;

  @NonNull
  public final ImageView ivIconOne;

  @NonNull
  public final ImageView ivIconTwo;

  @NonNull
  public final LinearLayout linBackArrow;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView txtCountOne;

  @NonNull
  public final TextView txtToolbarHeader;

  @NonNull
  public final TextView txtToolbarLanguage;

  @NonNull
  public final View viewBottomLineToolbar;

  protected LayoutToolbarBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout conIconOne, ConstraintLayout conIconTwo, ImageView imgToolbarHeader,
      ImageView ivArrow, ImageView ivIconOne, ImageView ivIconTwo, LinearLayout linBackArrow,
      Toolbar toolbar, TextView txtCountOne, TextView txtToolbarHeader, TextView txtToolbarLanguage,
      View viewBottomLineToolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.conIconOne = conIconOne;
    this.conIconTwo = conIconTwo;
    this.imgToolbarHeader = imgToolbarHeader;
    this.ivArrow = ivArrow;
    this.ivIconOne = ivIconOne;
    this.ivIconTwo = ivIconTwo;
    this.linBackArrow = linBackArrow;
    this.toolbar = toolbar;
    this.txtCountOne = txtCountOne;
    this.txtToolbarHeader = txtToolbarHeader;
    this.txtToolbarLanguage = txtToolbarLanguage;
    this.viewBottomLineToolbar = viewBottomLineToolbar;
  }

  @NonNull
  public static LayoutToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_toolbar, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static LayoutToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<LayoutToolbarBinding>inflateInternal(inflater, R.layout.layout_toolbar, root, attachToRoot, component);
  }

  @NonNull
  public static LayoutToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.layout_toolbar, null, false, component)
   */
  @NonNull
  @Deprecated
  public static LayoutToolbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<LayoutToolbarBinding>inflateInternal(inflater, R.layout.layout_toolbar, null, false, component);
  }

  public static LayoutToolbarBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static LayoutToolbarBinding bind(@NonNull View view, @Nullable Object component) {
    return (LayoutToolbarBinding)bind(component, view, R.layout.layout_toolbar);
  }
}
